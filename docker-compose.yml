# Default configuration - Development environment
# For production, use: docker-compose -f docker-compose.prod.yml up
services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:80"  # Map host port 3000 to container port 80 (nginx)
    depends_on:
      - api
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    stdin_open: true
    tty: true

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=sqlserver
      - DB_PORT=1433
      - DB_NAME=RandomCorpDB
      - DB_USER=sa
      - DB_PASSWORD=RandomCorp123!
      - DEBUG=true
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - ./api:/app
    networks:
      - randomcorp-network

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=RandomCorp123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    restart: unless-stopped
    networks:
      - randomcorp-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'RandomCorp123!' -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  sqlserver_data:

networks:
  randomcorp-network:
    driver: bridge
